apiVersion: apps/v1
kind: Deployment
metadata:
  name: fleet-manager
  namespace: tesla
spec:
  replicas: 1
  selector:
    matchLabels:
      app: fleet-manager
  template:
    metadata:
      labels:
        app: fleet-manager
    spec:
      containers:
        - name: frontend
          image: quay.io/rajsinghcpre/fleet-manager:v0.0.4
          # command: ["/fleet-manager", "-config", "/etc/fleet-manager/config.yaml"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/fleet-manager
            - name: data
              mountPath: /data
          ports:
            - containerPort: 8501
              name: http
          env:
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: ceph-tesla
                  key: AWS_ACCESS_KEY_ID
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: ceph-tesla
                  key: AWS_SECRET_ACCESS_KEY
            - name: BUCKET_HOST
              valueFrom:
                configMapKeyRef:
                  name: ceph-tesla
                  key: host
            - name: BUCKET_NAME
              valueFrom:
                configMapKeyRef:
                  name: ceph-tesla
                  key: name
            - name: BUCKET_PORT
              valueFrom:
                configMapKeyRef:
                  name: ceph-tesla
                  key: port
            - name: BUCKET_REGION
              valueFrom:
                configMapKeyRef:
                  name: ceph-tesla
                  key: region

        - name: backend
          image: quay.io/rajsinghcpre/fleet-manager-backend:v0.0.3
          command: ["/fleet-manager", "-config", "/etc/fleet-manager/config.yaml"]
          volumeMounts:
            - name: config-volume
              mountPath: /etc/fleet-manager
            - name: data
              mountPath: /data
          ports:
            - containerPort: 2112
              name: metrics
      volumes:
        - name: config-volume
          configMap:
            name: fleet-manager-config
        - name: data
          emptyDir: {}